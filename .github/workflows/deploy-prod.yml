name: Deploy to PROD

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    branches:
      - main
      - releases/**
  push:
    branches:
      - main
      - releases/**

jobs:
  Test_and_Build:
    uses: ./.github/workflows/test-and-build.yml
    secrets: inherit

  Deploy_to_PROD:
    needs: Test_and_Build
    name: Deploy to PROD
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    environment: prod
    env:
      environment: prod
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
          token: ${{ secrets.SUBMODULE_ACCESS_TOKEN }}

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin

      - name: Set up Gradle
        uses: gradle/gradle-build-action@v2

      - name: Authorize to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Authorize to Docker Repository
        run: gcloud auth configure-docker asia-northeast3-docker.pkg.dev

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Gradle Test and Build
        working-directory: beerlot-api
        run: |
          ./gradlew build -x test

      - name: Terraform Init
        working-directory: beerlot-api/terraform
        run: |
          terraform init -backend-config=environments/${{ env.environment }}/${{ env.environment }}.tfbackend

      - name: Terraform Plan
        working-directory: beerlot-api/terraform
        run: |
          terraform plan -out=tfplan -input=false \
          -var-file=environments/${{ env.environment }}/${{ env.environment }}.tfvars \
          -var="project=${{ vars.GCP_PROJECT }}" \
          -var="region=${{ vars.GCP_REGION }}" \
          -var="image_tag=${{ github.sha }}"

      - name: Terraform Deploy
        if: github.event_name == 'push'
        working-directory: beerlot-api/terraform
        run: |
          terraform apply -input=false tfplan

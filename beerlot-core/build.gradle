plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id "org.openapi.generator" version "6.1.0"
}

group = 'com.beerlot'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.24'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.7.3'
    implementation 'org.postgresql:postgresql:42.4.1'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.7.3'
    implementation 'com.querydsl:querydsl-jpa:5.0.0'
    implementation 'org.springframework:spring-webmvc:5.3.22'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.3'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.13.3'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.3'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.openapitools:openapi-generator-gradle-plugin:6.1.0'
    implementation 'org.jasypt:jasypt:1.9.3'
    implementation 'org.springframework.cloud:spring-cloud-gcp-starter-sql-postgresql:1.2.8.RELEASE'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    runtimeOnly 'com.h2database:h2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.7.3'
    annotationProcessor (
            'org.projectlombok:lombok:1.18.24',
            'com.querydsl:querydsl-apt:5.0.0:jpa',
            'org.springframework.boot:spring-boot-starter-data-jpa:2.7.2'
    )
}

tasks.named('test') {
    useJUnitPlatform()
}

def openApiSpecFile = "$projectDir/spec/beerlot-api-spec.yaml"
def openApiOutputDir = "$buildDir/generated"

openApiGenerate {
    generatorName = 'spring'
    inputSpec = openApiSpecFile.toString()
    outputDir = openApiOutputDir.toString()
    apiPackage = 'com.beerlot.api.generated.api'
    modelPackage = 'com.beerlot.api.generated.model'
    templateDir = "$projectDir/spec/template"
    configOptions = [
            dateLibrary: 'java11',
            useTags: 'true',
            interfaceOnly: 'true',
            hideGenerationTimestamp: 'true',
            useBeanValidation: 'false'
    ]
    importMappings = [
            'BeerPage': 'com.beerlot.core.domain.beer.util.page.BeerPage',
            'ReviewPage': 'com.beerlot.core.domain.review.util.page.ReviewPage',
            'BeerSortType': 'com.beerlot.core.domain.beer.util.sort.BeerSortType',
            'ReviewSortType': 'com.beerlot.core.domain.review.util.sort.ReviewSortType',
            'ProviderType': 'com.beerlot.core.domain.auth.security.oauth.entity.ProviderType',
            'LanguageCode': 'com.beerlot.core.domain.common.entity.LanguageCode'
    ]
}

openApiValidate {
    inputSpec = openApiSpecFile.toString()
    recommend = true
}

sourceSets.main.java {
    srcDir "${buildDir}/generated/src/main/java"
}

tasks.openApiGenerate.dependsOn tasks.openApiValidate
compileJava.dependsOn tasks.openApiGenerate

